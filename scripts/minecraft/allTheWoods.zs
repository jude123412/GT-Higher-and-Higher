
import crafttweaker.item.IItemStack;
import crafttweaker.item.IIngredient;
import crafttweaker.liquid.ILiquidStack;
import mods.gregtech.recipe.RecipeMap;

//Shapeless Recipe Remove
    val shapelessRecipeArray = [
        <biomesoplenty:planks_0>,
        <biomesoplenty:planks_0:1>,
        <biomesoplenty:planks_0:2>,
        <biomesoplenty:planks_0:3>,
        <biomesoplenty:planks_0:4>,
        <biomesoplenty:planks_0:5>,
        <biomesoplenty:planks_0:6>,
        <biomesoplenty:planks_0:7>,
        <biomesoplenty:planks_0:8>,
        <biomesoplenty:planks_0:9>,
        <biomesoplenty:planks_0:10>,
        <biomesoplenty:planks_0:11>,
        <biomesoplenty:planks_0:12>,
        <biomesoplenty:planks_0:13>,
        <biomesoplenty:planks_0:14>,
        <biomesoplenty:planks_0:15>,
        <forestry:planks.0>,
        <forestry:planks.0:1>,
        <forestry:planks.0:2>,
        <forestry:planks.0:3>,
        <forestry:planks.0:4>,
        <forestry:planks.0:5>,
        <forestry:planks.0:6>,
        <forestry:planks.0:7>,
        <forestry:planks.0:8>,
        <forestry:planks.0:9>,
        <forestry:planks.0:10>,
        <forestry:planks.0:11>,
        <forestry:planks.0:12>,
        <forestry:planks.0:13>,
        <forestry:planks.0:14>,
        <forestry:planks.0:15>,
        <forestry:planks.1>,
        <forestry:planks.1:1>,
        <forestry:planks.1:2>,
        <forestry:planks.1:3>,
        <forestry:planks.1:4>,
        <forestry:planks.1:5>,
        <forestry:planks.1:6>,
        <forestry:planks.1:7>,
        <forestry:planks.1:8>,
        <forestry:planks.1:9>,
        <forestry:planks.1:10>,
        <forestry:planks.1:11>,
        <forestry:planks.1:12>,
        <forestry:planks.1:12>,
        <forestry:planks.fireproof.0>,
        <forestry:planks.fireproof.0:1>,
        <forestry:planks.fireproof.0:2>,
        <forestry:planks.fireproof.0:3>,
        <forestry:planks.fireproof.0:4>,
        <forestry:planks.fireproof.0:5>,
        <forestry:planks.fireproof.0:6>,
        <forestry:planks.fireproof.0:7>,
        <forestry:planks.fireproof.0:8>,
        <forestry:planks.fireproof.0:9>,
        <forestry:planks.fireproof.0:10>,
        <forestry:planks.fireproof.0:11>,
        <forestry:planks.fireproof.0:12>,
        <forestry:planks.fireproof.0:13>,
        <forestry:planks.fireproof.0:14>,
        <forestry:planks.fireproof.0:15>,
        <forestry:planks.fireproof.1>,
        <forestry:planks.fireproof.1:1>,
        <forestry:planks.fireproof.1:2>,
        <forestry:planks.fireproof.1:3>,
        <forestry:planks.fireproof.1:4>,
        <forestry:planks.fireproof.1:5>,
        <forestry:planks.fireproof.1:6>,
        <forestry:planks.fireproof.1:7>,
        <forestry:planks.fireproof.1:8>,
        <forestry:planks.fireproof.1:9>,
        <forestry:planks.fireproof.1:10>,
        <forestry:planks.fireproof.1:11>,
        <forestry:planks.fireproof.1:12>,
        <forestry:planks.vanilla.fireproof.0>,
        <forestry:planks.vanilla.fireproof.0:1>,
        <forestry:planks.vanilla.fireproof.0:2>,
        <forestry:planks.vanilla.fireproof.0:3>,
        <forestry:planks.vanilla.fireproof.0:4>,
        <forestry:planks.vanilla.fireproof.0:5>,
        <forestry:slabs.fireproof.0>,
        <forestry:slabs.fireproof.0:1>,
        <forestry:slabs.fireproof.0:2>,
        <forestry:slabs.fireproof.0:3>,
        <forestry:slabs.fireproof.0:4>,
        <forestry:slabs.fireproof.0:5>,
        <forestry:slabs.fireproof.0:6>,
        <forestry:slabs.fireproof.0:7>,
        <forestry:slabs.fireproof.1>,
        <forestry:slabs.fireproof.1:1>,
        <forestry:slabs.fireproof.1:2>,
        <forestry:slabs.fireproof.1:3>,
        <forestry:slabs.fireproof.1:4>,
        <forestry:slabs.fireproof.1:5>,
        <forestry:slabs.fireproof.1:6>,
        <forestry:slabs.fireproof.1:7>,
        <forestry:slabs.fireproof.2>,
        <forestry:slabs.fireproof.2:1>,
        <forestry:slabs.fireproof.2:2>,
        <forestry:slabs.fireproof.2:3>,
        <forestry:slabs.fireproof.2:4>,
        <forestry:slabs.fireproof.2:5>,
        <forestry:slabs.fireproof.2:6>,
        <forestry:slabs.fireproof.2:7>,
        <forestry:slabs.fireproof.3>,
        <forestry:slabs.fireproof.3:1>,
        <forestry:slabs.fireproof.3:2>,
        <forestry:slabs.fireproof.3:3>,
        <forestry:slabs.fireproof.3:4>,
        <forestry:slabs.vanilla.fireproof.0>,
        <forestry:slabs.vanilla.fireproof.0:1>,
        <forestry:slabs.vanilla.fireproof.0:2>,
        <forestry:slabs.vanilla.fireproof.0:3>,
        <forestry:slabs.vanilla.fireproof.0:4>,
        <forestry:slabs.vanilla.fireproof.0:5>,
        <forestry:fences.fireproof.0>,
        <forestry:fences.fireproof.0:1>,
        <forestry:fences.fireproof.0:2>,
        <forestry:fences.fireproof.0:3>,
        <forestry:fences.fireproof.0:4>,
        <forestry:fences.fireproof.0:5>,
        <forestry:fences.fireproof.0:6>,
        <forestry:fences.fireproof.0:7>,
        <forestry:fences.fireproof.0:8>,
        <forestry:fences.fireproof.0:9>,
        <forestry:fences.fireproof.0:10>,
        <forestry:fences.fireproof.0:11>,
        <forestry:fences.fireproof.0:12>,
        <forestry:fences.fireproof.0:13>,
        <forestry:fences.fireproof.0:14>,
        <forestry:fences.fireproof.0:15>,
        <forestry:fences.fireproof.1>,
        <forestry:fences.fireproof.1:1>,
        <forestry:fences.fireproof.1:2>,
        <forestry:fences.fireproof.1:3>,
        <forestry:fences.fireproof.1:4>,
        <forestry:fences.fireproof.1:5>,
        <forestry:fences.fireproof.1:6>,
        <forestry:fences.fireproof.1:7>,
        <forestry:fences.fireproof.1:8>,
        <forestry:fences.fireproof.1:9>,
        <forestry:fences.fireproof.1:10>,
        <forestry:fences.fireproof.1:11>,
        <forestry:fences.fireproof.1:12>,
        <forestry:fences.vanilla.fireproof.0>,
        <forestry:fences.vanilla.fireproof.0:1>,
        <forestry:fences.vanilla.fireproof.0:2>,
        <forestry:fences.vanilla.fireproof.0:3>,
        <forestry:fences.vanilla.fireproof.0:4>,
        <forestry:fences.vanilla.fireproof.0:5>,
        <forestry:fence.gates.fireproof.larch>,
        <forestry:fence.gates.fireproof.teak>,
        <forestry:fence.gates.fireproof.acacia>,
        <forestry:fence.gates.fireproof.lime>,
        <forestry:fence.gates.fireproof.chestnut>,
        <forestry:fence.gates.fireproof.wenge>,
        <forestry:fence.gates.fireproof.baobab>,
        <forestry:fence.gates.fireproof.sequoia>,
        <forestry:fence.gates.fireproof.kapok>,
        <forestry:fence.gates.fireproof.ebony>,
        <forestry:fence.gates.fireproof.mahogany>,
        <forestry:fence.gates.fireproof.balsa>,
        <forestry:fence.gates.fireproof.willow>,
        <forestry:fence.gates.fireproof.walnut>,
        <forestry:fence.gates.fireproof.greenheart>,
        <forestry:fence.gates.fireproof.cherry>,
        <forestry:fence.gates.fireproof.mahoe>,
        <forestry:fence.gates.fireproof.poplar>,
        <forestry:fence.gates.fireproof.palm>,
        <forestry:fence.gates.fireproof.papaya>,
        <forestry:fence.gates.fireproof.pine>,
        <forestry:fence.gates.fireproof.plum>,
        <forestry:fence.gates.fireproof.maple>,
        <forestry:fence.gates.fireproof.citrus>,
        <forestry:fence.gates.fireproof.giganteum>,
        <forestry:fence.gates.fireproof.ipe>,
        <forestry:fence.gates.fireproof.padauk>,
        <forestry:fence.gates.fireproof.cocobolo>,
        <forestry:fence.gates.fireproof.zebrawood>,
        <forestry:fence.gates.vanilla.fireproof.oak>,
        <forestry:fence.gates.vanilla.fireproof.spruce>,
        <forestry:fence.gates.vanilla.fireproof.birch>,
        <forestry:fence.gates.vanilla.fireproof.jungle>,
        <forestry:fence.gates.vanilla.fireproof.acacia>,
        <forestry:fence.gates.vanilla.fireproof.dark_oak>,
        <forestry:stairs.fireproof.larch>,
        <forestry:stairs.fireproof.teak>,
        <forestry:stairs.fireproof.acacia>,
        <forestry:stairs.fireproof.lime>,
        <forestry:stairs.fireproof.chestnut>,
        <forestry:stairs.fireproof.wenge>,
        <forestry:stairs.fireproof.baobab>,
        <forestry:stairs.fireproof.sequoia>,
        <forestry:stairs.fireproof.kapok>,
        <forestry:stairs.fireproof.ebony>,
        <forestry:stairs.fireproof.mahogany>,
        <forestry:stairs.fireproof.balsa>,
        <forestry:stairs.fireproof.willow>,
        <forestry:stairs.fireproof.walnut>,
        <forestry:stairs.fireproof.greenheart>,
        <forestry:stairs.fireproof.cherry>,
        <forestry:stairs.fireproof.mahoe>,
        <forestry:stairs.fireproof.poplar>,
        <forestry:stairs.fireproof.palm>,
        <forestry:stairs.fireproof.papaya>,
        <forestry:stairs.fireproof.pine>,
        <forestry:stairs.fireproof.plum>,
        <forestry:stairs.fireproof.maple>,
        <forestry:stairs.fireproof.citrus>,
        <forestry:stairs.fireproof.giganteum>,
        <forestry:stairs.fireproof.ipe>,
        <forestry:stairs.fireproof.padauk>,
        <forestry:stairs.fireproof.cocobolo>,
        <forestry:stairs.fireproof.zebrawood>,
        <forestry:stairs.vanilla.fireproof.oak>,
        <forestry:stairs.vanilla.fireproof.spruce>,
        <forestry:stairs.vanilla.fireproof.birch>,
        <forestry:stairs.vanilla.fireproof.jungle>,
        <forestry:stairs.vanilla.fireproof.acacia>,
        <forestry:stairs.vanilla.fireproof.dark_oak>,
        <twilightforest:twilight_oak_planks>,
        <twilightforest:canopy_planks>,
        <twilightforest:mangrove_planks>,
        <twilightforest:dark_planks>,
        <twilightforest:time_planks>,
        <twilightforest:trans_planks>,
        <twilightforest:mine_planks>,
        <twilightforest:sort_planks>
    ]as IIngredient[];
    for output in shapelessRecipeArray{
        recipes.removeShapeless(output);
    }

//Wood Fix Shapeless
    val shapelessOutputs = [
        <biomesoplenty:planks_0> * 2,
        <biomesoplenty:planks_0:1> * 2,
        <biomesoplenty:planks_0:2> * 2,
        <biomesoplenty:planks_0:3> * 2,
        <biomesoplenty:planks_0:4> * 2,
        <biomesoplenty:planks_0:5> * 2,
        <biomesoplenty:planks_0:6> * 2,
        <biomesoplenty:planks_0:7> * 2,
        <biomesoplenty:planks_0:8> * 2,
        <biomesoplenty:planks_0:9> * 2,
        <biomesoplenty:planks_0:10> * 2,
        <biomesoplenty:planks_0:11> * 2,
        <biomesoplenty:planks_0:12> * 2,
        <biomesoplenty:planks_0:13> * 2,
        <biomesoplenty:planks_0:14> * 2,
        <biomesoplenty:planks_0:15> * 2,
        <forestry:planks.0> * 2,
        <forestry:planks.0:1> * 2,
        <forestry:planks.0:2> * 2,
        <forestry:planks.0:3> * 2,
        <forestry:planks.0:4> * 2,
        <forestry:planks.0:5> * 2,
        <forestry:planks.0:6> * 2,
        <forestry:planks.0:7> * 2,
        <forestry:planks.0:8> * 2,
        <forestry:planks.0:9> * 2,
        <forestry:planks.0:10> * 2,
        <forestry:planks.0:11> * 2,
        <forestry:planks.0:12> * 2,
        <forestry:planks.0:13> * 2,
        <forestry:planks.0:14> * 2,
        <forestry:planks.0:15> * 2,
        <forestry:planks.1> * 2,
        <forestry:planks.1:1> * 2,
        <forestry:planks.1:2> * 2,
        <forestry:planks.1:3> * 2,
        <forestry:planks.1:4> * 2,
        <forestry:planks.1:5> * 2,
        <forestry:planks.1:6> * 2,
        <forestry:planks.1:7> * 2,
        <forestry:planks.1:8> * 2,
        <forestry:planks.1:9> * 2,
        <forestry:planks.1:10> * 2,
        <forestry:planks.1:11> * 2,
        <forestry:planks.1:12> * 2,
        <minecraft:planks:3> * 2,
        <minecraft:planks:1> * 2,
        <minecraft:planks:2> * 2,
        <aether_legacy:skyroot_plank> * 2,
        <aether_legacy:skyroot_plank> * 2,
        <twilightforest:twilight_oak_planks> * 2,
        <twilightforest:canopy_planks> * 2,
        <twilightforest:mangrove_planks> * 2,
        <twilightforest:dark_planks> * 2,
        <twilightforest:time_planks> * 2,
        <twilightforest:trans_planks> * 2,
        <twilightforest:mine_planks> * 2,
        <twilightforest:sort_planks> * 2
    ]as IItemStack[]; 

    val shapelessInputs = [
        <biomesoplenty:log_0:4> * 1,
        <biomesoplenty:log_0:5> * 1,
        <biomesoplenty:log_0:6> * 1,
        <biomesoplenty:log_0:7> * 1,
        <biomesoplenty:log_1:4> * 1,
        <biomesoplenty:log_1:5> * 1,
        <biomesoplenty:log_1:6> * 1,
        <biomesoplenty:log_1:7> * 1,
        <biomesoplenty:log_2:4> * 1,
        <biomesoplenty:log_2:5> * 1,
        <biomesoplenty:log_2:6> * 1,
        <biomesoplenty:log_2:7> * 1,
        <biomesoplenty:log_3:4> * 1,
        <biomesoplenty:log_3:5> * 1,
        <biomesoplenty:log_3:6> * 1,
        <biomesoplenty:log_3:7> * 1,
        <forestry:logs.0> * 1,
        <forestry:logs.0:1> * 1,
        <forestry:logs.0:2> * 1,
        <forestry:logs.0:3> * 1,
        <forestry:logs.1> * 1,
        <forestry:logs.1:1> * 1,
        <forestry:logs.1:2> * 1,
        <forestry:logs.1:3> * 1,
        <forestry:logs.2> * 1,
        <forestry:logs.2:1> * 1,
        <forestry:logs.2:2> * 1,
        <forestry:logs.2:3> * 1,
        <forestry:logs.3> * 1,
        <forestry:logs.3:1> * 1,
        <forestry:logs.3:2> * 1,
        <forestry:logs.3:3> * 1,
        <forestry:logs.4> * 1,
        <forestry:logs.4:1> * 1,
        <forestry:logs.4:2> * 1,
        <forestry:logs.4:3> * 1,
        <forestry:logs.5> * 1,
        <forestry:logs.5:1> * 1,
        <forestry:logs.5:2> * 1,
        <forestry:logs.5:3> * 1,
        <forestry:logs.6> * 1,
        <forestry:logs.6:1> * 1,
        <forestry:logs.6:2> * 1,
        <forestry:logs.6:3> * 1,
        <forestry:logs.7> * 1,
        <harvestcraft:pamcinnamon> * 1,
        <harvestcraft:pammaple> * 1,
        <harvestcraft:pampaperbark> * 1,
        <aether_legacy:aether_log> * 1,
        <aether_legacy:aether_log:1> * 1,
        <twilightforest:twilight_log> * 1,
        <twilightforest:twilight_log:1> * 1,
        <twilightforest:twilight_log:2> * 1,
        <twilightforest:twilight_log:3> * 1,
        <twilightforest:magic_log> * 1,
        <twilightforest:magic_log:1> * 1,
        <twilightforest:magic_log:2> * 1,
        <twilightforest:magic_log:3> * 1
    ]as IItemStack[];

    for index, recipeInputs in shapelessInputs{
        val recipeOutputs = shapelessOutputs[index];
        recipes.addShapeless(recipeOutputs, [recipeInputs]);
    }

    val shapedOutputs = [
        <biomesoplenty:planks_0> * 4,
        <biomesoplenty:planks_0:1> * 4,
        <biomesoplenty:planks_0:2> * 4,
        <biomesoplenty:planks_0:3> * 4,
        <biomesoplenty:planks_0:4> * 4,
        <biomesoplenty:planks_0:5> * 4,
        <biomesoplenty:planks_0:6> * 4,
        <biomesoplenty:planks_0:7> * 4,
        <biomesoplenty:planks_0:8> * 4,
        <biomesoplenty:planks_0:9> * 4,
        <biomesoplenty:planks_0:10> * 4,
        <biomesoplenty:planks_0:11> * 4,
        <biomesoplenty:planks_0:12> * 4,
        <biomesoplenty:planks_0:13> * 4,
        <biomesoplenty:planks_0:14> * 4,
        <biomesoplenty:planks_0:15> * 4,
        <forestry:planks.0> * 4,
        <forestry:planks.0:1> * 4,
        <forestry:planks.0:2> * 4,
        <forestry:planks.0:3> * 4,
        <forestry:planks.0:4> * 4,
        <forestry:planks.0:5> * 4,
        <forestry:planks.0:6> * 4,
        <forestry:planks.0:7> * 4,
        <forestry:planks.0:8> * 4,
        <forestry:planks.0:9> * 4,
        <forestry:planks.0:10> * 4,
        <forestry:planks.0:11> * 4,
        <forestry:planks.0:12> * 4,
        <forestry:planks.0:13> * 4,
        <forestry:planks.0:14> * 4,
        <forestry:planks.0:15> * 4,
        <forestry:planks.1> * 4,
        <forestry:planks.1:1> * 4,
        <forestry:planks.1:2> * 4,
        <forestry:planks.1:3> * 4,
        <forestry:planks.1:4> * 4,
        <forestry:planks.1:5> * 4,
        <forestry:planks.1:6> * 4,
        <forestry:planks.1:7> * 4,
        <forestry:planks.1:8> * 4,
        <forestry:planks.1:9> * 4,
        <forestry:planks.1:10> * 4,
        <forestry:planks.1:11> * 4,
        <forestry:planks.1:12> * 4,
        <minecraft:planks:3> * 4,
        <minecraft:planks:1> * 4,
        <minecraft:planks:2> * 4,
        <aether_legacy:skyroot_plank> * 4,
        <aether_legacy:skyroot_plank> * 4,
        <twilightforest:twilight_oak_planks> * 4,
        <twilightforest:canopy_planks> * 4,
        <twilightforest:mangrove_planks> * 4,
        <twilightforest:dark_planks> * 4,
        <twilightforest:time_planks> * 4,
        <twilightforest:trans_planks> * 4,
        <twilightforest:mine_planks> * 4,
        <twilightforest:sort_planks> * 4
    ]as IItemStack[];

    val shapedInputs = [
        <biomesoplenty:log_0:4> * 1,
        <biomesoplenty:log_0:5> * 1,
        <biomesoplenty:log_0:6> * 1,
        <biomesoplenty:log_0:7> * 1,
        <biomesoplenty:log_1:4> * 1,
        <biomesoplenty:log_1:5> * 1,
        <biomesoplenty:log_1:6> * 1,
        <biomesoplenty:log_1:7> * 1,
        <biomesoplenty:log_2:4> * 1,
        <biomesoplenty:log_2:5> * 1,
        <biomesoplenty:log_2:6> * 1,
        <biomesoplenty:log_2:7> * 1,
        <biomesoplenty:log_3:4> * 1,
        <biomesoplenty:log_3:5> * 1,
        <biomesoplenty:log_3:6> * 1,
        <biomesoplenty:log_3:7> * 1,
        <forestry:logs.0> * 1,
        <forestry:logs.0:1> * 1,
        <forestry:logs.0:2> * 1,
        <forestry:logs.0:3> * 1,
        <forestry:logs.1> * 1,
        <forestry:logs.1:1> * 1,
        <forestry:logs.1:2> * 1,
        <forestry:logs.1:3> * 1,
        <forestry:logs.2> * 1,
        <forestry:logs.2:1> * 1,
        <forestry:logs.2:2> * 1,
        <forestry:logs.2:3> * 1,
        <forestry:logs.3> * 1,
        <forestry:logs.3:1> * 1,
        <forestry:logs.3:2> * 1,
        <forestry:logs.3:3> * 1,
        <forestry:logs.4> * 1,
        <forestry:logs.4:1> * 1,
        <forestry:logs.4:2> * 1,
        <forestry:logs.4:3> * 1,
        <forestry:logs.5> * 1,
        <forestry:logs.5:1> * 1,
        <forestry:logs.5:2> * 1,
        <forestry:logs.5:3> * 1,
        <forestry:logs.6> * 1,
        <forestry:logs.6:1> * 1,
        <forestry:logs.6:2> * 1,
        <forestry:logs.6:3> * 1,
        <forestry:logs.7> * 1,
        <harvestcraft:pamcinnamon> * 1,
        <harvestcraft:pammaple> * 1,
        <harvestcraft:pampaperbark> * 1,
        <aether_legacy:aether_log> * 1,
        <aether_legacy:aether_log:1> * 1,
        <twilightforest:twilight_log> * 1,
        <twilightforest:twilight_log:1> * 1,
        <twilightforest:twilight_log:2> * 1,
        <twilightforest:twilight_log:3> * 1,
        <twilightforest:magic_log> * 1,
        <twilightforest:magic_log:1> * 1,
        <twilightforest:magic_log:2> * 1,
        <twilightforest:magic_log:3> * 1
    ]as IItemStack[];

    for index, recipeInputs in shapedInputs{
        val recipeOutputs = shapedOutputs[index];
        recipes.addShaped(recipeOutputs, [[null, <ore:craftingToolSaw>, null], [null, recipeInputs, null], [null, null, null]]);
    }

    val cutterRecipeInputs = [
        <biomesoplenty:log_0:4> * 1,
        <biomesoplenty:log_0:5> * 1,
        <biomesoplenty:log_0:6> * 1,
        <biomesoplenty:log_0:7> * 1,
        <biomesoplenty:log_1:4> * 1,
        <biomesoplenty:log_1:5> * 1,
        <biomesoplenty:log_1:6> * 1,
        <biomesoplenty:log_1:7> * 1,
        <biomesoplenty:log_2:4> * 1,
        <biomesoplenty:log_2:5> * 1,
        <biomesoplenty:log_2:6> * 1,
        <biomesoplenty:log_2:7> * 1,
        <biomesoplenty:log_3:4> * 1,
        <biomesoplenty:log_3:5> * 1,
        <biomesoplenty:log_3:6> * 1,
        <biomesoplenty:log_3:7> * 1,
        <forestry:logs.0> * 1,
        <forestry:logs.0:1> * 1,
        <forestry:logs.0:2> * 1,
        <forestry:logs.0:3> * 1,
        <forestry:logs.1> * 1,
        <forestry:logs.1:1> * 1,
        <forestry:logs.1:2> * 1,
        <forestry:logs.1:3> * 1,
        <forestry:logs.2> * 1,
        <forestry:logs.2:1> * 1,
        <forestry:logs.2:2> * 1,
        <forestry:logs.2:3> * 1,
        <forestry:logs.3> * 1,
        <forestry:logs.3:1> * 1,
        <forestry:logs.3:2> * 1,
        <forestry:logs.3:3> * 1,
        <forestry:logs.4> * 1,
        <forestry:logs.4:1> * 1,
        <forestry:logs.4:2> * 1,
        <forestry:logs.4:3> * 1,
        <forestry:logs.5> * 1,
        <forestry:logs.5:1> * 1,
        <forestry:logs.5:2> * 1,
        <forestry:logs.5:3> * 1,
        <forestry:logs.6> * 1,
        <forestry:logs.6:1> * 1,
        <forestry:logs.6:2> * 1,
        <forestry:logs.6:3> * 1,
        <forestry:logs.7> * 1,
        <harvestcraft:pamcinnamon> * 1,
        <harvestcraft:pammaple> * 1,
        <harvestcraft:pampaperbark> * 1,
        <twilightforest:twilight_log> * 1,
        <twilightforest:twilight_log:1> * 1,
        <twilightforest:twilight_log:2> * 1,
        <twilightforest:twilight_log:3> * 1,
        <twilightforest:magic_log> * 1,
        <twilightforest:magic_log:1> * 1,
        <twilightforest:magic_log:2> * 1,
        <twilightforest:magic_log:3> * 1
    ]as IIngredient[];

    val cutterRecipeOutputs = [
        <biomesoplenty:planks_0> * 6,
        <biomesoplenty:planks_0:1> * 6,
        <biomesoplenty:planks_0:2> * 6,
        <biomesoplenty:planks_0:3> * 6,
        <biomesoplenty:planks_0:4> * 6,
        <biomesoplenty:planks_0:5> * 6,
        <biomesoplenty:planks_0:6> * 6,
        <biomesoplenty:planks_0:7> * 6,
        <biomesoplenty:planks_0:8> * 6,
        <biomesoplenty:planks_0:9> * 6,
        <biomesoplenty:planks_0:10> * 6,
        <biomesoplenty:planks_0:11> * 6,
        <biomesoplenty:planks_0:12> * 6,
        <biomesoplenty:planks_0:13> * 6,
        <biomesoplenty:planks_0:14> * 6,
        <biomesoplenty:planks_0:15> * 6,
        <forestry:planks.0> * 6,
        <forestry:planks.0:1> * 6,
        <forestry:planks.0:2> * 6,
        <forestry:planks.0:3> * 6,
        <forestry:planks.0:4> * 6,
        <forestry:planks.0:5> * 6,
        <forestry:planks.0:6> * 6,
        <forestry:planks.0:7> * 6,
        <forestry:planks.0:8> * 6,
        <forestry:planks.0:9> * 6,
        <forestry:planks.0:10> * 6,
        <forestry:planks.0:11> * 6,
        <forestry:planks.0:12> * 6,
        <forestry:planks.0:13> * 6,
        <forestry:planks.0:14> * 6,
        <forestry:planks.0:15> * 6,
        <forestry:planks.1> * 6,
        <forestry:planks.1:1> * 6,
        <forestry:planks.1:2> * 6,
        <forestry:planks.1:3> * 6,
        <forestry:planks.1:4> * 6,
        <forestry:planks.1:5> * 6,
        <forestry:planks.1:6> * 6,
        <forestry:planks.1:7> * 6,
        <forestry:planks.1:8> * 6,
        <forestry:planks.1:9> * 6,
        <forestry:planks.1:10> * 6,
        <forestry:planks.1:11> * 6,
        <forestry:planks.1:12> * 6,
        <minecraft:planks:3> * 6,
        <minecraft:planks:2> * 6,
        <minecraft:planks:1> * 6,
        <twilightforest:twilight_oak_planks> * 6,
        <twilightforest:canopy_planks> * 6,
        <twilightforest:mangrove_planks> * 6,
        <twilightforest:dark_planks> * 6,
        <twilightforest:time_planks> * 6,
        <twilightforest:trans_planks> * 6,
        <twilightforest:mine_planks> * 6,
        <twilightforest:sort_planks> * 6,
    ]as IItemStack[];

    for index, recipeInputs in cutterRecipeInputs{
        val recipeOutputs = cutterRecipeOutputs[index];
        cutter.recipeBuilder()
            .inputs(recipeInputs)
            .fluidInputs(<liquid:water> * 4)
            .outputs(recipeOutputs, <gregtech:meta_dust:1617> * 2)
            .duration(400)
            .EUt(7)
            .buildAndRegister();
        cutter.recipeBuilder()
            .inputs(recipeInputs)
            .fluidInputs(<liquid:distilled_water> * 3)
            .outputs(recipeOutputs, <gregtech:meta_dust:1617> * 2)
            .duration(300)
            .EUt(7)
            .buildAndRegister();
    cutter.recipeBuilder()
            .inputs(recipeInputs)
            .fluidInputs(<liquid:lubricant> * 1)
            .outputs(recipeOutputs, <gregtech:meta_dust:1617> * 2)
            .duration(200)
            .EUt(7)
            .buildAndRegister();
    }

    recipes.removeShapeless(<minecraft:planks:3> * 4, [<harvestcraft:pamcinnamon>]);
    recipes.removeShapeless(<minecraft:planks:3> * 4, [<harvestcraft:pampaperbark>]);
    recipes.removeShapeless(<minecraft:planks:1> * 4, [<harvestcraft:pammaple>]);
    recipes.removeShaped(<aether_legacy:skyroot_plank> * 4);